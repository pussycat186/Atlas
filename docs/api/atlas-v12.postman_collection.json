{
  "info": {
    "name": "Atlas v12 API",
    "description": "Complete API collection for Atlas v12 FutureTech Infrastructure",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{api_key}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000/v1",
      "type": "string"
    },
    {
      "key": "api_key",
      "value": "sk_live_demo_key_123456789",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Get Health Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            }
          },
          "response": [
            {
              "name": "Healthy Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/health",
                  "host": ["{{base_url}}"],
                  "path": ["health"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"healthy\",\n  \"timestamp\": \"2024-01-01T00:00:00Z\",\n  \"version\": \"1.0.0\",\n  \"witnesses\": {\n    \"total\": 5,\n    \"healthy\": 4,\n    \"quorum\": true\n  }\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Data Ingestion",
      "item": [
        {
          "name": "Submit Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"message\": \"Hello, Atlas!\",\n  \"metadata\": {\n    \"source\": \"postman\",\n    \"timestamp\": \"2024-01-01T00:00:00Z\",\n    \"userId\": \"test_user_123\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/messages",
              "host": ["{{base_url}}"],
              "path": ["messages"]
            }
          },
          "response": [
            {
              "name": "Successful Submission",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"message\": \"Hello, Atlas!\",\n  \"metadata\": {\n    \"source\": \"postman\",\n    \"timestamp\": \"2024-01-01T00:00:00Z\",\n    \"userId\": \"test_user_123\"\n  }\n}"
                },
                "url": {
                  "raw": "{{base_url}}/messages",
                  "host": ["{{base_url}}"],
                  "path": ["messages"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"msg_abc123def456\",\n  \"status\": \"success\",\n  \"timestamp\": \"2024-01-01T00:00:00Z\",\n  \"witnesses\": [\"w1\", \"w2\", \"w3\", \"w4\"],\n  \"quorum\": true,\n  \"attestations\": 4,\n  \"data\": {\n    \"message\": \"Hello, Atlas!\",\n    \"metadata\": {\n      \"source\": \"postman\",\n      \"timestamp\": \"2024-01-01T00:00:00Z\",\n      \"userId\": \"test_user_123\"\n    }\n  }\n}"
            }
          ]
        },
        {
          "name": "Submit Complex Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"message\": \"User completed purchase\",\n  \"metadata\": {\n    \"event\": \"purchase_completed\",\n    \"userId\": \"user_456\",\n    \"orderId\": \"order_789\",\n    \"amount\": 99.99,\n    \"currency\": \"USD\",\n    \"source\": \"webhook\",\n    \"timestamp\": \"2024-01-01T00:00:00Z\",\n    \"tags\": [\"user\", \"purchase\", \"web\", \"high_value\"]\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/messages",
              "host": ["{{base_url}}"],
              "path": ["messages"]
            }
          }
        },
        {
          "name": "List Messages",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/messages?limit=10&offset=0&status=success",
              "host": ["{{base_url}}"],
              "path": ["messages"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "offset",
                  "value": "0"
                },
                {
                  "key": "status",
                  "value": "success"
                }
              ]
            }
          },
          "response": [
            {
              "name": "Message List",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/messages?limit=10&offset=0&status=success",
                  "host": ["{{base_url}}"],
                  "path": ["messages"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "offset",
                      "value": "0"
                    },
                    {
                      "key": "status",
                      "value": "success"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"messages\": [\n    {\n      \"id\": \"msg_abc123def456\",\n      \"status\": \"success\",\n      \"timestamp\": \"2024-01-01T00:00:00Z\",\n      \"witnesses\": [\"w1\", \"w2\", \"w3\", \"w4\"],\n      \"quorum\": true,\n      \"attestations\": 4\n    }\n  ],\n  \"pagination\": {\n    \"limit\": 10,\n    \"offset\": 0,\n    \"total\": 150,\n    \"hasMore\": true\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Message by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/messages/{{message_id}}",
              "host": ["{{base_url}}"],
              "path": ["messages", "{{message_id}}"]
            }
          },
          "response": [
            {
              "name": "Message Details",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/messages/msg_abc123def456",
                  "host": ["{{base_url}}"],
                  "path": ["messages", "msg_abc123def456"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"msg_abc123def456\",\n  \"status\": \"success\",\n  \"timestamp\": \"2024-01-01T00:00:00Z\",\n  \"witnesses\": [\"w1\", \"w2\", \"w3\", \"w4\"],\n  \"quorum\": true,\n  \"attestations\": 4,\n  \"data\": {\n    \"message\": \"Hello, Atlas!\",\n    \"metadata\": {\n      \"source\": \"postman\",\n      \"timestamp\": \"2024-01-01T00:00:00Z\",\n      \"userId\": \"test_user_123\"\n    }\n  },\n  \"attestationDetails\": [\n    {\n      \"witnessId\": \"w1\",\n      \"timestamp\": \"2024-01-01T00:00:00Z\",\n      \"signature\": \"sig_abc123\",\n      \"region\": \"us-east-1\"\n    }\n  ],\n  \"traceId\": \"trace_abc123def456\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Witness Network",
      "item": [
        {
          "name": "List All Witnesses",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/witnesses",
              "host": ["{{base_url}}"],
              "path": ["witnesses"]
            }
          },
          "response": [
            {
              "name": "Witness List",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/witnesses",
                  "host": ["{{base_url}}"],
                  "path": ["witnesses"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"witnesses\": [\n    {\n      \"id\": \"w1\",\n      \"status\": \"healthy\",\n      \"region\": \"us-east-1\",\n      \"lastSeen\": \"2024-01-01T00:00:00Z\",\n      \"attestations\": 12345,\n      \"uptime\": \"99.9%\"\n    },\n    {\n      \"id\": \"w2\",\n      \"status\": \"healthy\",\n      \"region\": \"us-west-2\",\n      \"lastSeen\": \"2024-01-01T00:00:00Z\",\n      \"attestations\": 12340,\n      \"uptime\": \"99.8%\"\n    },\n    {\n      \"id\": \"w3\",\n      \"status\": \"degraded\",\n      \"region\": \"eu-west-1\",\n      \"lastSeen\": \"2024-01-01T00:00:00Z\",\n      \"attestations\": 12300,\n      \"uptime\": \"95.2%\"\n    },\n    {\n      \"id\": \"w4\",\n      \"status\": \"healthy\",\n      \"region\": \"ap-southeast-2\",\n      \"lastSeen\": \"2024-01-01T00:00:00Z\",\n      \"attestations\": 12350,\n      \"uptime\": \"99.7%\"\n    },\n    {\n      \"id\": \"w5\",\n      \"status\": \"offline\",\n      \"region\": \"us-east-1\",\n      \"lastSeen\": \"2023-12-31T23:45:00Z\",\n      \"attestations\": 0,\n      \"uptime\": \"0%\"\n    }\n  ],\n  \"quorum\": {\n    \"required\": 4,\n    \"achieved\": true,\n    \"healthyCount\": 4,\n    \"totalCount\": 5\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Witness Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/witnesses/w1",
              "host": ["{{base_url}}"],
              "path": ["witnesses", "w1"]
            }
          },
          "response": [
            {
              "name": "Witness Details",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/witnesses/w1",
                  "host": ["{{base_url}}"],
                  "path": ["witnesses", "w1"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"w1\",\n  \"status\": \"healthy\",\n  \"region\": \"us-east-1\",\n  \"lastSeen\": \"2024-01-01T00:00:00Z\",\n  \"attestations\": 12345,\n  \"uptime\": \"99.9%\",\n  \"version\": \"1.0.0\",\n  \"resources\": {\n    \"cpu\": 23.5,\n    \"memory\": 67.2,\n    \"disk\": 45.8,\n    \"network\": {\n      \"bytesIn\": 1024000,\n      \"bytesOut\": 2048000\n    }\n  },\n  \"lastAttestation\": \"2024-01-01T00:00:00Z\",\n  \"networkLatency\": 45.2\n}"
            }
          ]
        },
        {
          "name": "Get Quorum Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/quorum",
              "host": ["{{base_url}}"],
              "path": ["admin", "quorum"]
            }
          },
          "response": [
            {
              "name": "Quorum Status",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/admin/quorum",
                  "host": ["{{base_url}}"],
                  "path": ["admin", "quorum"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"quorum\": {\n    \"required\": 4,\n    \"achieved\": true,\n    \"healthyCount\": 4,\n    \"totalCount\": 5\n  },\n  \"witnesses\": [\n    {\n      \"id\": \"w1\",\n      \"status\": \"healthy\",\n      \"region\": \"us-east-1\",\n      \"lastSeen\": \"2024-01-01T00:00:00Z\",\n      \"attestations\": 12345,\n      \"uptime\": \"99.9%\"\n    }\n  ],\n  \"lastUpdate\": \"2024-01-01T00:00:00Z\",\n  \"conflicts\": 2\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Metrics",
      "item": [
        {
          "name": "Get Application Metrics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/metrics?time_range=1h&metric_type=application",
              "host": ["{{base_url}}"],
              "path": ["metrics"],
              "query": [
                {
                  "key": "time_range",
                  "value": "1h"
                },
                {
                  "key": "metric_type",
                  "value": "application"
                }
              ]
            }
          },
          "response": [
            {
              "name": "Application Metrics",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/metrics?time_range=1h&metric_type=application",
                  "host": ["{{base_url}}"],
                  "path": ["metrics"],
                  "query": [
                    {
                      "key": "time_range",
                      "value": "1h"
                    },
                    {
                      "key": "metric_type",
                      "value": "application"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"timeRange\": \"1h\",\n  \"metrics\": {\n    \"messageRate\": 1247,\n    \"latencyP50\": 45,\n    \"latencyP95\": 89,\n    \"latencyP99\": 156,\n    \"errorRate\": 0.2,\n    \"throughput\": 1250\n  },\n  \"timestamp\": \"2024-01-01T00:00:00Z\"\n}"
            }
          ]
        },
        {
          "name": "Get System Metrics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/metrics?time_range=24h&metric_type=system",
              "host": ["{{base_url}}"],
              "path": ["metrics"],
              "query": [
                {
                  "key": "time_range",
                  "value": "24h"
                },
                {
                  "key": "metric_type",
                  "value": "system"
                }
              ]
            }
          }
        },
        {
          "name": "Get Witness Metrics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/metrics?time_range=7d&metric_type=witness",
              "host": ["{{base_url}}"],
              "path": ["metrics"],
              "query": [
                {
                  "key": "time_range",
                  "value": "7d"
                },
                {
                  "key": "metric_type",
                  "value": "witness"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Administration",
      "item": [
        {
          "name": "Get System Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/system",
              "host": ["{{base_url}}"],
              "path": ["admin", "system"]
            }
          },
          "response": [
            {
              "name": "System Status",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/admin/system",
                  "host": ["{{base_url}}"],
                  "path": ["admin", "system"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"healthy\",\n  \"version\": \"1.0.0\",\n  \"uptime\": \"99.9%\",\n  \"resources\": {\n    \"cpu\": 23.5,\n    \"memory\": 67.2,\n    \"disk\": 45.8,\n    \"network\": {\n      \"bytesIn\": 1024000,\n      \"bytesOut\": 2048000\n    }\n  },\n  \"services\": [\n    {\n      \"name\": \"atlas-gateway\",\n      \"status\": \"healthy\",\n      \"version\": \"1.0.0\",\n      \"uptime\": \"99.9%\"\n    },\n    {\n      \"name\": \"atlas-web\",\n      \"status\": \"healthy\",\n      \"version\": \"1.0.0\",\n      \"uptime\": \"99.8%\"\n    }\n  ],\n  \"lastUpdate\": \"2024-01-01T00:00:00Z\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Error Examples",
      "item": [
        {
          "name": "Invalid API Key",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer sk_invalid_key"
              }
            ],
            "url": {
              "raw": "{{base_url}}/messages",
              "host": ["{{base_url}}"],
              "path": ["messages"]
            }
          },
          "response": [
            {
              "name": "401 Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer sk_invalid_key"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/messages",
                  "host": ["{{base_url}}"],
                  "path": ["messages"]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": {\n    \"code\": \"INVALID_API_KEY\",\n    \"message\": \"The provided API key is invalid\",\n    \"details\": {\n      \"field\": \"authorization\",\n      \"value\": \"sk_invalid_key\"\n    },\n    \"timestamp\": \"2024-01-01T00:00:00Z\",\n    \"requestId\": \"req_abc123def456\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Rate Limit Exceeded",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"message\": \"Rate limit test\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/messages",
              "host": ["{{base_url}}"],
              "path": ["messages"]
            }
          },
          "response": [
            {
              "name": "429 Too Many Requests",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"message\": \"Rate limit test\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/messages",
                  "host": ["{{base_url}}"],
                  "path": ["messages"]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-RateLimit-Limit",
                  "value": "1000"
                },
                {
                  "key": "X-RateLimit-Remaining",
                  "value": "0"
                },
                {
                  "key": "X-RateLimit-Reset",
                  "value": "1640995200"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": {\n    \"code\": \"RATE_LIMIT_EXCEEDED\",\n    \"message\": \"Rate limit exceeded. Please try again later.\",\n    \"details\": {\n      \"limit\": 1000,\n      \"remaining\": 0,\n      \"resetTime\": \"2024-01-01T01:00:00Z\"\n    },\n    \"timestamp\": \"2024-01-01T00:00:00Z\",\n    \"requestId\": \"req_abc123def456\"\n  }\n}"
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set message_id from previous response if available",
          "if (pm.response && pm.response.json && pm.response.json().id) {",
          "    pm.collectionVariables.set('message_id', pm.response.json().id);",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Basic response validation",
          "pm.test('Status code is successful', function () {",
          "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
          "});",
          "",
          "pm.test('Response time is acceptable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "pm.test('Content-Type is JSON', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});",
          "",
          "// Store message ID for subsequent requests",
          "if (pm.response.json() && pm.response.json().id) {",
          "    pm.collectionVariables.set('message_id', pm.response.json().id);",
          "}"
        ]
      }
    }
  ]
}
