# Atlas Admin App Dockerfile
FROM node:18-alpine AS base

# Install dependencies only when needed
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install pnpm
RUN npm install -g pnpm

# Copy package files
COPY package.json pnpm-workspace.yaml pnpm-lock.yaml* ./
COPY packages/fabric-protocol/package.json ./packages/fabric-protocol/
COPY packages/fabric-client/package.json ./packages/fabric-client/
COPY apps/admin/package.json ./apps/admin/

# Install dependencies
RUN pnpm install --frozen-lockfile

# Build the application
FROM base AS builder
WORKDIR /app

# Install pnpm in builder stage
RUN npm install -g pnpm

COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Build packages
RUN pnpm -r --filter=@atlas/fabric-protocol build
RUN pnpm -r --filter=@atlas/fabric-client build
RUN pnpm -r --filter=@atlas/admin build

# Production image
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV PORT=3002

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 atlas

# Copy built application
COPY --from=builder --chown=atlas:nodejs /app/apps/admin/.next/standalone ./
COPY --from=builder --chown=atlas:nodejs /app/apps/admin/.next/static ./apps/admin/.next/static
COPY --from=builder --chown=atlas:nodejs /app/apps/admin/public ./apps/admin/public

USER atlas

EXPOSE 3002

CMD ["node", "apps/admin/server.js"]
