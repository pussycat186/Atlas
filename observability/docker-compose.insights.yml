version: '3.8'
services:
  jaeger:
    image: jaegertracing/all-in-one:1.57
    ports:
      - "16686:16686"   # UI only (disable OTLP 4317/4318 here)

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.104.0
    command: ["--config=/etc/otelcol/config.yml"]
    volumes:
      - ./otel-collector.yml:/etc/otelcol/config.yml:ro
    ports:
      - "4317:4317"
      - "4318:4318"
      - "8889:8889"
    restart: unless-stopped
    depends_on:
      - jaeger

  prometheus:
    image: prom/prometheus:v2.54.1
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules:/etc/prometheus/rules:ro
    ports:
      - "9090:9090"
    depends_on:
      - otel-collector

  alertmanager:
    image: prom/alertmanager:v0.27.0
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    ports:
      - "9093:9093"
    depends_on:
      - prometheus

  grafana:
    image: grafana/grafana:10.4.5
    ports:
      - "3007:3000"
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/provisioning/alerting:/etc/grafana/provisioning/alerting:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - prometheus
      - alertmanager

  gateway:
    build:
      context: ..
      dockerfile: services/gateway/Dockerfile
    environment:
      OTEL_SERVICE_NAME: atlas-gateway
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4318
      OTEL_LOG_LEVEL: debug
      PORT: "8080"
    ports:
      - "8080:8080"
    depends_on:
      - otel-collector

  w1:
    build:
      context: ..
      dockerfile: services/witness-node/Dockerfile
    environment:
      OTEL_SERVICE_NAME: atlas-w1
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4318
      OTEL_LOG_LEVEL: debug
      PORT: "8091"
    ports:
      - "8091:8091"
    depends_on:
      - otel-collector

  w2:
    build:
      context: ..
      dockerfile: services/witness-node/Dockerfile
    environment:
      OTEL_SERVICE_NAME: atlas-w2
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4318
      OTEL_LOG_LEVEL: debug
      PORT: "8092"
    ports:
      - "8092:8092"
    depends_on:
      - otel-collector

  w3:
    build:
      context: ..
      dockerfile: services/witness-node/Dockerfile
    environment:
      OTEL_SERVICE_NAME: atlas-w3
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4318
      OTEL_LOG_LEVEL: debug
      PORT: "8093"
    ports:
      - "8093:8093"
    depends_on:
      - otel-collector

  w4:
    build:
      context: ..
      dockerfile: services/witness-node/Dockerfile
    environment:
      OTEL_SERVICE_NAME: atlas-w4
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4318
      OTEL_LOG_LEVEL: debug
      PORT: "8094"
    ports:
      - "8094:8094"
    depends_on:
      - otel-collector

  w5:
    build:
      context: ..
      dockerfile: services/witness-node/Dockerfile
    environment:
      OTEL_SERVICE_NAME: atlas-w5
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4318
      OTEL_LOG_LEVEL: debug
      PORT: "8095"
    ports:
      - "8095:8095"
    depends_on:
      - otel-collector

  dummy-webhook:
    image: httpd:2.4-alpine
    command: ["httpd", "-D", "FOREGROUND", "-f", "/usr/local/apache2/conf/httpd.conf"]
    ports:
      - "9999:80"
