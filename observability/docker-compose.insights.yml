services:
  jaeger:
    image: jaegertracing/all-in-one:1.57
    ports: ["16686:16686"]
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.104.0
    command: ["--config=/etc/otelcol/otel-collector.yml"]
    volumes:
      - ./otel-collector.yml:/etc/otelcol/otel-collector.yml:ro
    ports:
      - "4317:4317"
      - "4318:4318"
  grafana:
    image: grafana/grafana:10.4.5
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports: ["3007:3000"]
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards/Atlas
  prometheus:
    image: prom/prometheus:v2.54.1
    command: ["--config.file=/etc/prometheus/prometheus.yml"]
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports: ["9090:9090"]

  w1:
    build:
      context: ..
      dockerfile: services/witness-node/Dockerfile
    environment:
      - PORT=8091
      - WITNESS_ID=w1
      - OTEL_ENABLED=1
      - OTEL_SERVICE_NAME=atlas-w1
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
    ports: ["8091:8091"]
    depends_on: { otel-collector: { condition: service_started } }

  w2:
    build:
      context: ..
      dockerfile: services/witness-node/Dockerfile
    environment:
      - PORT=8092
      - WITNESS_ID=w2
      - OTEL_ENABLED=1
      - OTEL_SERVICE_NAME=atlas-w2
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
    ports: ["8092:8092"]
    depends_on: { otel-collector: { condition: service_started } }

  w3:
    build:
      context: ..
      dockerfile: services/witness-node/Dockerfile
    environment:
      - PORT=8093
      - WITNESS_ID=w3
      - OTEL_ENABLED=1
      - OTEL_SERVICE_NAME=atlas-w3
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
    ports: ["8093:8093"]
    depends_on: { otel-collector: { condition: service_started } }

  w4:
    build:
      context: ..
      dockerfile: services/witness-node/Dockerfile
    environment:
      - PORT=8094
      - WITNESS_ID=w4
      - OTEL_ENABLED=1
      - OTEL_SERVICE_NAME=atlas-w4
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
    ports: ["8094:8094"]
    depends_on: { otel-collector: { condition: service_started } }

  w5:
    build:
      context: ..
      dockerfile: services/witness-node/Dockerfile
    environment:
      - PORT=8095
      - WITNESS_ID=w5
      - OTEL_ENABLED=1
      - OTEL_SERVICE_NAME=atlas-w5
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
    ports: ["8095:8095"]
    depends_on: { otel-collector: { condition: service_started } }
