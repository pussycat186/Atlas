name: CI Build & Test

on:
  push:
    branches: [main, reboot/atlas-hardening-v1]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest-xl
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    
    strategy:
      matrix:
        node-version: [20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9
        run_install: false
    
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
    
    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Lint code
      run: pnpm lint
    
    - name: Type check
      run: pnpm type-check
    
    - name: Build packages
      run: pnpm build
    
    - name: Run unit tests
      run: pnpm test:unit
    
    - name: Run integration tests
      run: pnpm test:integration
      env:
        NODE_ENV: test
    
    - name: Run E2E tests
      run: pnpm test:e2e
      env:
        NODE_ENV: test
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          coverage/
          test-results/
          playwright-report/
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          packages/*/dist/
          services/*/dist/
          apps/*/dist/
          apps/*/.next/
          apps/*/out/

  security-scan:
    runs-on: ubuntu-latest
    needs: build-test
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9
        run_install: false
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Run security audit
      run: pnpm audit --audit-level moderate
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  dependency-analysis:
    runs-on: ubuntu-latest
    needs: build-test
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9
        run_install: false
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Run knip analysis
      run: pnpm dlx knip --reporter=markdown > _reports/KNIP.md
    
    - name: Run ts-prune analysis
      run: pnpm dlx ts-prune > _reports/TSPRUNE.txt || true
    
    - name: Run dependency cruiser
      run: pnpm dlx depcruise . --config .dependency-cruiser.cjs --output-type json > _reports/depcruise.json
    
    - name: Upload analysis reports
      uses: actions/upload-artifact@v3
      with:
        name: analysis-reports
        path: _reports/
