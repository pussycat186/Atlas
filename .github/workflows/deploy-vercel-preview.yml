name: Deploy Vercel Preview

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install pnpm
        run: npm install -g pnpm@9.0.0
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Build tokens
        env:
          FIGMA_TOKEN: ${{ secrets.FIGMA_TOKEN }}
        run: |
          pnpm -w run tokens:pull
          pnpm -w run tokens:build
      
      - name: Build packages
        run: pnpm -w build
      
      - name: Deploy Admin Insights
        id: deploy-admin
        run: |
          cd apps/admin-insights
          npx vercel --token=${{ secrets.VERCEL_TOKEN }} --yes --scope=${{ secrets.VERCEL_ORG_ID }} > deployment-url.txt
          echo "url=$(cat deployment-url.txt)" >> $GITHUB_OUTPUT
      
      - name: Deploy Dev Portal
        id: deploy-dev
        run: |
          cd apps/dev-portal
          npx vercel --token=${{ secrets.VERCEL_TOKEN }} --yes --scope=${{ secrets.VERCEL_ORG_ID }} > deployment-url.txt
          echo "url=$(cat deployment-url.txt)" >> $GITHUB_OUTPUT
      
      - name: Deploy Proof Messenger
        id: deploy-proof
        run: |
          cd apps/proof-messenger
          npx vercel --token=${{ secrets.VERCEL_TOKEN }} --yes --scope=${{ secrets.VERCEL_ORG_ID }} > deployment-url.txt
          echo "url=$(cat deployment-url.txt)" >> $GITHUB_OUTPUT
      
      - name: Comment Preview URLs
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## ðŸš€ Preview Deployments

            PREVIEW_URL_ADMIN_INSIGHTS: ${{ steps.deploy-admin.outputs.url }}
            PREVIEW_URL_DEV_PORTAL: ${{ steps.deploy-dev.outputs.url }}
            PREVIEW_URL_PROOF_MESSENGER: ${{ steps.deploy-proof.outputs.url }}

            All apps deployed to Vercel Preview. Ready for testing.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });