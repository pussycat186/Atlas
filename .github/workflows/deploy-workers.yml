name: Deploy Workers

on:
  workflow_dispatch:
    inputs:
      ref:
        description: "Branch or tag"
        required: false
        default: "main"
  push:
    branches: [main]
    paths:
      - 'services/**'

permissions:
  contents: read

jobs:
  deploy-workers:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - service: gateway
            wd: services/gateway
          - service: witness-node
            wd: services/witness-node
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.ref || 'main' }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
        
    - name: Build service
      working-directory: ${{ matrix.wd }}
      run: pnpm build
        
    - name: Install Wrangler
      run: npm install -g wrangler
        
    - name: Authenticate Wrangler
      run: wrangler whoami
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        
    - name: Deploy to Cloudflare Workers
      working-directory: ${{ matrix.wd }}
      run: |
        echo "Deploying ${{ matrix.service }} to Cloudflare Workers..."
        wrangler deploy --compatibility-date=2024-01-01
        echo "✅ ${{ matrix.service }} deployed"
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        
    - name: Verify deployment
      run: |
        SERVICE_URL=""
        if [ "${{ matrix.service }}" = "gateway" ]; then
          SERVICE_URL="https://atlas-gateway.sonthenguyen186.workers.dev/health"
        elif [ "${{ matrix.service }}" = "witness-node" ]; then
          SERVICE_URL="https://atlas-witness-1.sonthenguyen186.workers.dev/health"
        fi
        
        if [ -n "$SERVICE_URL" ]; then
          echo "Verifying deployment at $SERVICE_URL"
          for i in {1..10}; do
            if curl -f -s "$SERVICE_URL" > /dev/null; then
              echo "✅ ${{ matrix.service }} is healthy"
              break
            else
              echo "⏳ Waiting for ${{ matrix.service }}... ($i/10)"
              sleep 10
            fi
          done
        fi