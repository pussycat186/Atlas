name: Performance Testing with k6

on:
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      admin_url:
        description: 'Admin Insights Preview URL'
        required: true
      dev_url:
        description: 'Dev Portal Preview URL'
        required: true
      proof_url:
        description: 'Proof Messenger Preview URL'
        required: true

jobs:
  perf-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install k6
        run: |
          sudo gpg -k
          sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
          echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install k6
      
      - name: Create k6 test script
        run: |
          cat > k6-test.js << 'EOF'
          import http from 'k6/http';
          import { check, sleep } from 'k6';
          
          export let options = {
            stages: [
              { duration: '30s', target: 500 }, // Warm-up
              { duration: '60s', target: 500 }, // Measurement window
            ],
          };
          
          const urls = [
            __ENV.ADMIN_URL + '/prism',
            __ENV.DEV_URL + '/prism', 
            __ENV.PROOF_URL + '/prism/'
          ];
          
          export default function() {
            const url = urls[Math.floor(Math.random() * urls.length)];
            let response = http.get(url);
            check(response, {
              'status is 200': (r) => r.status === 200,
              'response time < 200ms': (r) => r.timings.duration < 200,
            });
            sleep(0.1);
          }
          EOF
      
      - name: Run k6 performance test
        env:
          ADMIN_URL: ${{ github.event.inputs.admin_url || 'https://atlas-admin-insights.vercel.app' }}
          DEV_URL: ${{ github.event.inputs.dev_url || 'https://atlas-dev-portal.vercel.app' }}
          PROOF_URL: ${{ github.event.inputs.proof_url || 'https://atlas-proof-messenger.vercel.app' }}
        run: |
          k6 run --out json=k6-results.json k6-test.js > k6-summary.txt
      
      - name: Upload k6 Results
        uses: actions/upload-artifact@v4
        with:
          name: k6-results
          path: |
            k6-results.json
            k6-summary.txt
          retention-days: 30
      
      - name: Comment Performance Results
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let summary = 'Performance test completed';
            try {
              summary = fs.readFileSync('k6-summary.txt', 'utf8');
            } catch (e) {}
            
            const comment = `## âš¡ Performance Test Results
            
            \`\`\`
            ${summary}
            \`\`\`
            
            Full JSON results available in artifacts.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });