name: Deploy Frontends
on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      app:
        description: 'Deploy specific app (all, proof-messenger, admin-insights, dev-portal)'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - proof-messenger
          - admin-insights
          - dev-portal
concurrency:
  group: deploy-frontends
  cancel-in-progress: true
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with: { version: 9.0.0 }
      - uses: actions/setup-node@v4
        with: { node-version: '20', cache: 'pnpm' }
      
      - name: Setup Turborepo cache
        uses: actions/cache@v3
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-
      
      - name: Secrets check
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID_PROOF: ${{ secrets.VERCEL_PROJECT_ID_PROOF }}
          VERCEL_PROJECT_ID_INSIGHTS: ${{ secrets.VERCEL_PROJECT_ID_INSIGHTS }}
          VERCEL_PROJECT_ID_DEV: ${{ secrets.VERCEL_PROJECT_ID_DEV }}
          VERCEL_PROJECT_ID_DEVPORTAL: ${{ secrets.VERCEL_PROJECT_ID_DEVPORTAL }}
        run: |
          set -euo pipefail
          DEV_ID=${VERCEL_PROJECT_ID_DEV:-$VERCEL_PROJECT_ID_DEVPORTAL}
          for v in VERCEL_TOKEN VERCEL_ORG_ID VERCEL_PROJECT_ID_PROOF VERCEL_PROJECT_ID_INSIGHTS; do
            if [ -z "${!v:-}" ]; then echo "BLOCKER_MISSING_SECRET:$v"; exit 2; fi
          done
          if [ -z "$DEV_ID" ]; then echo "BLOCKER_MISSING_SECRET:VERCEL_PROJECT_ID_DEV"; exit 2; fi
          echo "DEV_ID=$DEV_ID" >> $GITHUB_ENV
      
      - run: pnpm install --frozen-lockfile
      - run: pnpm build
      
      - name: Install Vercel CLI
        run: npm install -g vercel@latest
      
      - name: Deploy admin-insights
        if: ${{ github.event.inputs.app == 'all' || github.event.inputs.app == 'admin-insights' || github.event_name == 'push' }}
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_INSIGHTS }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        run: vercel deploy --prod --cwd apps/admin-insights --token ${{ secrets.VERCEL_TOKEN }} --yes
        
      - name: Deploy dev-portal
        if: ${{ github.event.inputs.app == 'all' || github.event.inputs.app == 'dev-portal' || github.event_name == 'push' }}
        env:
          VERCEL_PROJECT_ID: ${{ env.DEV_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        run: vercel deploy --prod --cwd apps/dev-portal --token ${{ secrets.VERCEL_TOKEN }} --yes
          
      - name: Deploy proof-messenger
        if: ${{ github.event.inputs.app == 'all' || github.event.inputs.app == 'proof-messenger' || github.event_name == 'push' }}
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_PROOF }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        run: vercel deploy --prod --token ${{ secrets.VERCEL_TOKEN }} --yes
      
      - name: Audit Prism endpoints
        run: node scripts/audit-prism.mjs
