name: Deploy Frontends
on:
  workflow_dispatch:
  push:
    branches: [main]

concurrency:
  group: deploy-frontends-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        app:
          - apps/admin-insights
          - apps/dev-portal
          - apps/proof-messenger
    
    defaults:
      run:
        working-directory: ${{ matrix.app }}
    
    permissions:
      id-token: write
      contents: read
    
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1
        with:
          fetch-depth: 0
      
      - name: Setup pnpm
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2  # v4.0.0
        with:
          version: 9
          run_install: false
      
      - name: Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8  # v4.0.2
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install dependencies (workspace root)
        run: pnpm -w install --frozen-lockfile
        working-directory: .
      
      - name: Build workspace
        run: pnpm -w build
        working-directory: .
      
      - name: Select Vercel project ID
        run: |
          case "${{ matrix.app }}" in
            "apps/admin-insights")
              echo "VERCEL_PROJECT_ID=${{ secrets.VERCEL_PROJECT_ID_ADMIN_INSIGHTS }}" >> $GITHUB_ENV
              ;;
            "apps/dev-portal")
              echo "VERCEL_PROJECT_ID=${{ secrets.VERCEL_PROJECT_ID_DEV_PORTAL }}" >> $GITHUB_ENV
              ;;
            "apps/proof-messenger")
              echo "VERCEL_PROJECT_ID=${{ secrets.VERCEL_PROJECT_ID_PROOF_MESSENGER }}" >> $GITHUB_ENV
              ;;
          esac
      
      - name: Pull Vercel configuration
        run: npx vercel pull --yes --environment=production --token="${VERCEL_TOKEN}"
      
      - name: Build with Vercel
        run: npx vercel build --prod --token="${VERCEL_TOKEN}"
      
      - name: Deploy to Vercel production
        id: deploy
        run: |
          DEPLOYMENT_URL=$(npx vercel deploy --prebuilt --prod --token="${VERCEL_TOKEN}")
          echo "url=${DEPLOYMENT_URL}" >> $GITHUB_OUTPUT
          echo "âœ… Deployed to: ${DEPLOYMENT_URL}"
      
      - name: Output deployment URL
        run: |
          echo "::notice title=Deployment URL for ${{ matrix.app }}::${{ steps.deploy.outputs.url }}"