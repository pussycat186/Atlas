name: Deploy Frontends
on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      app:
        description: 'Deploy specific app (all, proof-messenger, admin-insights, dev-portal)'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - proof-messenger
          - admin-insights
          - dev-portal
concurrency:
  group: deploy-frontends
  cancel-in-progress: true
jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - app: admin-insights
            path: apps/admin-insights
            project_secret: VERCEL_PROJECT_ID_ADMIN
          - app: dev-portal
            path: apps/dev-portal
            project_secret: VERCEL_PROJECT_ID_DEV
          - app: proof-messenger
            path: apps/proof-messenger
            project_secret: VERCEL_PROJECT_ID_PROOF
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Enable corepack and check pnpm
        run: |
          corepack enable
          pnpm -v
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Typecheck
        run: pnpm -w run type-check
      
      - name: Build
        run: pnpm -w run build
      
      - name: Install Vercel CLI
        run: npm install -g vercel@latest
      
      - name: Pull Vercel config
        working-directory: ${{ matrix.path }}
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets[matrix.project_secret] }}
        run: vercel pull --yes --environment=production --token "${{ secrets.VERCEL_TOKEN }}"
      
      - name: Build for Vercel
        working-directory: ${{ matrix.path }}
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets[matrix.project_secret] }}
        run: vercel build --prod --token "${{ secrets.VERCEL_TOKEN }}"
      
      - name: Deploy to Vercel
        working-directory: ${{ matrix.path }}
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets[matrix.project_secret] }}
        run: vercel deploy --prebuilt --prod --yes --token "${{ secrets.VERCEL_TOKEN }}"

  verify:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Verify deployments
        run: |
          for url in "https://atlas-admin-insights.vercel.app" "https://atlas-dev-portal.vercel.app" "https://atlas-proof-messenger.vercel.app"; do
            echo "Checking $url/prism"
            curl -I "$url/prism" || echo "Failed to reach $url/prism"
            curl -s "$url/prism" | grep -q "ATLAS • Prism UI — Peak Preview" && echo "✓ Prism marker found" || echo "✗ Prism marker missing"
          done