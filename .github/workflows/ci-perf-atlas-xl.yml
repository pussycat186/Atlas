name: CI - Performance (Atlas XL Runner)

on:
  pull_request:
    branches:
      - main
    paths:
      - 'services/**'
      - 'packages/**'
      - 'k6-*.js'
      - '.github/workflows/ci-perf-atlas-xl.yml'

jobs:
  performance-test:
    runs-on: ubuntu-latest-4-cores  # Request 4 vCPU runner
    timeout-minutes: 10
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: |
          cd packages/fabric-protocol && pnpm run build
          cd ../fabric-client && pnpm run build

      - name: Build services
        run: |
          cd services/gateway && pnpm run build
          cd ../witness-node && pnpm run build

      - name: Start services
        run: |
          cd services/gateway && PORT=8080 pnpm start &
          cd services/witness-node && PORT=3001 pnpm start &
          sleep 5

      - name: Verify services
        run: |
          curl -f http://localhost:8080/health || exit 1
          curl -f http://localhost:3001/witness/health || exit 1
          curl -f http://localhost:8080/metrics || exit 1
          curl -f http://localhost:3001/metrics || exit 1

      - name: Install k6
        run: |
          sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
          echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install k6

      - name: Run performance test
        run: |
          k6 run k6-atlas-xl-test.js
        env:
          ATLAS_BASE: http://localhost:8080

      - name: Upload performance results
        uses: actions/upload-artifact@v4
        with:
          name: performance-results
          path: _reports/k6-summary.json

      - name: Performance gate
        run: |
          if [ -f "_reports/k6-summary.json" ]; then
            p95=$(jq -r '.metrics.p95_latency_ms // 0' _reports/k6-summary.json)
            error_rate=$(jq -r '.metrics.error_rate // 1' _reports/k6-summary.json)
            rps=$(jq -r '.metrics.avg_rps // 0' _reports/k6-summary.json)
            
            echo "Performance Results:"
            echo "  RPS: $rps"
            echo "  p95 Latency: ${p95}ms"
            echo "  Error Rate: ${error_rate}"
            
            if (( $(echo "$p95 > 200" | bc -l) )); then
              echo "❌ FAIL: p95 latency ${p95}ms exceeds 200ms threshold"
              exit 1
            fi
            
            if (( $(echo "$error_rate >= 0.01" | bc -l) )); then
              echo "❌ FAIL: Error rate ${error_rate} exceeds 1% threshold"
              exit 1
            fi
            
            if (( $(echo "$rps < 500" | bc -l) )); then
              echo "⚠️  WARN: RPS ${rps} below 500 target"
            fi
            
            echo "✅ PASS: Performance gates met"
          else
            echo "❌ FAIL: Performance results file not found"
            exit 1
          fi

      - name: Record runner specs
        run: |
          echo "Runner Specifications:" >> runner-specs.txt
          echo "CPU Cores: $(nproc)" >> runner-specs.txt
          echo "Memory: $(free -h | grep Mem | awk '{print $2}')" >> runner-specs.txt
          echo "Architecture: $(uname -m)" >> runner-specs.txt
          echo "OS: $(uname -s)" >> runner-specs.txt
          cat runner-specs.txt

