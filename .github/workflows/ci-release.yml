name: CI Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag'
        required: true
        default: 'v1.0.0'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9.0.0
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build packages
      run: pnpm build
      
    - name: Run tests
      run: pnpm test
      
    - name: Install syft for SBOM generation
      run: |
        curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
        
    - name: Generate SBOM
      run: |
        # Generate SBOM for each service
        syft packages services/gateway -o spdx-json > atlas-gateway-sbom.json
        syft packages services/witness-node -o spdx-json > atlas-witness-sbom.json
        syft packages apps/web -o spdx-json > atlas-web-sbom.json
        
        # Generate root SBOM
        syft packages . -o spdx-json > atlas-root-sbom.json
        
    - name: Install cosign for signing
      run: |
        wget -O cosign https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64
        chmod +x cosign
        sudo mv cosign /usr/local/bin/
        
    - name: Generate cosign keypair
      run: |
        cosign generate-key-pair
        
    - name: Sign SBOMs with cosign
      run: |
        cosign sign-blob --key cosign.key atlas-gateway-sbom.json --bundle atlas-gateway-sbom.json.bundle
        cosign sign-blob --key cosign.key atlas-witness-sbom.json --bundle atlas-witness-sbom.json.bundle
        cosign sign-blob --key cosign.key atlas-web-sbom.json --bundle atlas-web-sbom.json.bundle
        cosign sign-blob --key cosign.key atlas-root-sbom.json --bundle atlas-root-sbom.json.bundle
        
    - name: Install SLSA provenance generator
      run: |
        go install github.com/slsa-framework/slsa-verifier/v2/cli/slsa-verifier@latest
        
    - name: Generate SLSA provenance
      run: |
        # Create SLSA provenance for the release
        cat > slsa-provenance.json << EOF
        {
          "version": 1,
          "predicateType": "https://slsa.dev/provenance/v1",
          "predicate": {
            "buildType": "https://github.com/actions/runner",
            "builder": {
              "id": "https://github.com/actions/runner"
            },
            "buildInvocationId": "${{ github.run_id }}",
            "buildConfig": {
              "source": {
                "uri": "${{ github.server_url }}/${{ github.repository }}",
                "digest": {
                  "sha1": "${{ github.sha }}"
                }
              }
            },
            "metadata": {
              "buildInvocationId": "${{ github.run_id }}",
              "buildStartedOn": "${{ github.event.head_commit.timestamp }}",
              "buildFinishedOn": "${{ github.event.head_commit.timestamp }}"
            },
            "materials": [
              {
                "uri": "${{ github.server_url }}/${{ github.repository }}",
                "digest": {
                  "sha1": "${{ github.sha }}"
                }
              }
            ]
          }
        }
        EOF
        
    - name: Sign SLSA provenance
      run: |
        cosign sign-blob --key cosign.key slsa-provenance.json --bundle slsa-provenance.json.bundle
        
    - name: Generate SHA256 manifest
      run: |
        # Generate SHA256 hashes for all artifacts
        sha256sum atlas-gateway-sbom.json > sha256-manifest.txt
        sha256sum atlas-witness-sbom.json >> sha256-manifest.txt
        sha256sum atlas-web-sbom.json >> sha256-manifest.txt
        sha256sum atlas-root-sbom.json >> sha256-manifest.txt
        sha256sum slsa-provenance.json >> sha256-manifest.txt
        
        # Add bundle files
        sha256sum *.bundle >> sha256-manifest.txt
        
        # Add public key
        sha256sum cosign.pub >> sha256-manifest.txt
        
    - name: Create release artifacts
      run: |
        # Create release directory
        mkdir -p release-artifacts
        
        # Copy all artifacts
        cp *.json *.bundle *.pub sha256-manifest.txt release-artifacts/
        
        # Create release summary
        cat > release-artifacts/RELEASE_SUMMARY.md << EOF
        # ATLAS v12 Release Artifacts
        
        ## SBOM Files
        - atlas-gateway-sbom.json - Gateway service SBOM
        - atlas-witness-sbom.json - Witness node service SBOM
        - atlas-web-sbom.json - Web application SBOM
        - atlas-root-sbom.json - Root project SBOM
        
        ## Signatures
        - *.bundle - Cosign signatures for all artifacts
        
        ## Provenance
        - slsa-provenance.json - SLSA provenance attestation
        - cosign.pub - Public key for verification
        
        ## Verification
        - sha256-manifest.txt - SHA256 checksums for all artifacts
        
        ## Verification Commands
        \`\`\`bash
        # Verify SBOM signatures
        cosign verify-blob --key cosign.pub --bundle atlas-gateway-sbom.json.bundle atlas-gateway-sbom.json
        
        # Verify SLSA provenance
        cosign verify-blob --key cosign.pub --bundle slsa-provenance.json.bundle slsa-provenance.json
        
        # Verify checksums
        sha256sum -c sha256-manifest.txt
        \`\`\`
        EOF
        
    - name: Upload release artifacts
      uses: actions/upload-artifact@v3
      with:
        name: release-artifacts
        path: release-artifacts/
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: ATLAS v12 Release ${{ github.ref_name }}
        body: |
          # ATLAS v12 Release ${{ github.ref_name }}
          
          This release includes:
          - Complete observability infrastructure
          - Performance gates and CI/CD pipelines
          - Supply chain security with SBOM, cosign signatures, and SLSA provenance
          - Hardened TypeScript configuration
          - Comprehensive test coverage
          
          ## Artifacts
          - SBOM files for all services
          - Cosign signatures for all artifacts
          - SLSA provenance attestation
          - SHA256 manifest for verification
          
          Download the release artifacts from the Actions tab.
        draft: false
        prerelease: false